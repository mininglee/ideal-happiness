
CREATE TABLE health_information (
    member_id INT,
    breed_name INT,
    age_range INT,
    exercise_amount INT,
    disease VARCHAR(255),
    height_range INT,
    weight_range VARCHAR(255)
);

INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('골든 리트리버', '어린 강아지', '일일 약 30분에서 1시간 정도의 산책과 약간의 놀이 시간을 권장합니다.', '식욕 부진, 눈꺼풀 이완증', '평균 신장 45cm', '적정 몸무게 15-25kg');

INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('골든 리트리버', '성장 중 강아지', '일일 약 1시간에서 2시간 정도의 산책과 활동적인 놀이 시간을 권장합니다.', '소화 문제, 피부 염증', '평균 신장 60cm', '적정 몸무게 25-35kg');

INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('골든 리트리버', '성년 강아지', '일일 약 2시간 이상의 산책과 활동이 풍부한 놀이 시간을 권장합니다.', '암, 고관절 질환', '평균 신장 61cm', '적정 몸무게 25-34kg');
  
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('진돗개', '어린 강아지', '일일 약 30분에서 1시간 정도의 산책과 약간의 놀이 시간을 권장합니다.', '열사병, 관절 이상, 피부 문제', '평균 신장 38-42cm', '적정 몸무게 8-12kg');

INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('진돗개', '성장 중 강아지', '일일 약 1시간에서 2시간 정도의 산책과 활동적인 놀이 시간을 권장합니다.', '열사병, 관절 이상, 피부 문제', '평균 신장 50-55cm', '적정 몸무게 15-20kg');

INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('진돗개', '성년 강아지', '일일 약 2시간 이상의 산책과 활동이 풍부한 놀이 시간을 권장합니다.', '열사병, 관절 이상, 피부 문제', '평균 신장 55-60cm', '적정 몸무게 18-25kg');

-- Poodle (푸들)
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('푸들', '어린 강아지', '일일 약 30분에서 1시간 정도의 산책과 약간의 놀이 시간을 권장합니다.', '식욕 부진, 구토와 설사', '평균 신장 22-33cm', '적정 몸무게 3-8kg');

INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('푸들', '성장 중 강아지', '일일 약 1시간에서 2시간 정도의 산책과 활동적인 놀이 시간을 권장합니다.', '피부 감염, 알레르기', '평균 신장 28-40cm', '적정 몸무게 7-15kg');

INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('푸들', '성년 강아지', '일일 약 2시간 이상의 산책과 활동이 풍부한 놀이 시간을 권장합니다.', '눈 및 귀 질환, 신장 질환', '평균 신장 28-38cm', '적정 몸무게 17-25kg');

-- Chihuahua (치와와)
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('치와와', '어린 강아지', '일일 약 30분에서 1시간 정도의 산책과 약간의 놀이 시간을 권장합니다.', '호흡곤란, 장염', '평균 신장 12-18cm', '적정 몸무게 0.5-2kg');

INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('치와와', '성장 중 강아지', '일일 약 1시간에서 2시간 정도의 산책과 활동적인 놀이 시간을 권장합니다.', '피부 알레르기, 위장관 질환', '평균 신장 15-20cm', '적정 몸무게 1-2.5kg');
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('치와와', '성년 강아지', '일일 약 2시간 이상의 산책과 활동이 풍부한 놀이 시간을 권장합니다.', '심장 질환, 관절 이상', '평균 신장 15-23cm', '적정 몸무게 13kg');

-- Maltese (말티즈)
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('말티즈', '어린 강아지', '일일 약 30분에서 1시간 정도의 산책과 약간의 놀이 시간을 권장합니다.', '식욕 부진, 구토와 설사', '평균 신장 18-22cm', '적정 몸무게 1.5-2.5kg');
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('말티즈', '성장 중 강아지', '일일 약 1시간에서 2시간 정도의 산책과 활동적인 놀이 시간을 권장합니다.', '피부 문제, 턱 관절 이상', '평균 신장 22-25cm', '적정 몸무게 2-4kg');
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('말티즈', '성년 강아지', '일일 약 2시간 이상의 산책과 활동이 풍부한 놀이 시간을 권장합니다.', '치아 문제, 심장 질환', '평균 신장 22-25cm', '적정 몸무게 3-4kg');

-- Bulldog (불독)
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('불독', '어린 강아지', '일일 약 30분에서 1시간 정도의 산책과 약간의 놀이 시간을 권장합니다.', '호흡곤란, 장염', '평균 신장 25-35cm', '적정 몸무게 7-15kg');
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('불독', '성장 중 강아지', '일일 약 1시간에서 2시간 정도의 산책과 활동적인 놀이 시간을 권장합니다.', '피부 알레르기, 위장관 질환', '평균 신장 30-40cm', '적정 몸무게 13-22kg');
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('불독', '성년 강아지', '일일 약 2시간 이상의 산책과 활동이 풍부한 놀이 시간을 권장합니다.', '심장 질환, 관절 이상', '평균 신장 30-40cm', '적정 몸무게 18-25kg');

-- German Shepherd (저먼 셰퍼드)
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('저먼셰퍼드', '어린 강아지', '일일 약 30분에서 1시간 정도의 산책과 약간의 놀이 시간을 권장합니다.', '식욕 부진, 구토와 설사', '평균 신장 55-66cm', '적정 몸무게 22-40kg');
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('저먼 셰퍼드', '성장 중 강아지', '일일 약 1시간에서 2시간 정도의 산책과 활동적인 놀이 시간을 권장합니다.', '허리디스크, 고관절 이상', '평균 신장 61-66cm', '적정 몸무게 30-40kg');
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('저먼 셰퍼드', '성년 강아지', '일일 약 2시간 이상의 산책과 활동이 풍부한 놀이 시간을 권장합니다.', '염증성 장질환, 암', '평균 신장 60-65cm', '적정 몸무게 30-40kg');

-- Labrador Retriever (라브라도 리트리버)
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('라브라도 리트리버', '어린 강아지', '일일 약 30분에서 1시간 정도의 산책과 약간의 놀이 시간을 권장합니다.', '비만, 고관절 이상', '평균 신장 54-58cm', '적정 몸무게 25-36kg');
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('라브라도 리트리버', '성장 중 강아지', '일일 약 1시간에서 2시간 정도의 산책과 활동적인 놀이 시간을 권장합니다.', '피부 알레르기, 고관절 이상', '평균 신장 56-61cm', '적정 몸무게 27-36kg');
INSERT INTO health_information (breed_name, age_range, exercise_amount, diseases, height_range, weight_range)
VALUES
    ('라브라도 리트리버', '성년 강아지', '일일 약 2시간 이상의 산책과 활동이 풍부한 놀이 시간을 권장합니다.', '비만, 관절 이상', '평균 신장 56-61cm', '적정 몸무게 27-36kg');




<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<%@ page import="java.util.List" %>
<%@ page import="java.util.ArrayList" %>
<%@ page import="javax.servlet.http.HttpServletRequest" %>
<%@ page import="javax.servlet.http.HttpServletResponse" %>
<%@ page import="java.sql.*" %>
<%@ page import="java.io.*" %>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>회원 목록</title>
</head>
<body>
    <h1>회원 목록</h1>
    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>이름</th>
                <th>성별</th>
                <th>전화번호</th>
                <th>이메일</th>
                <th>종</th>
                <th>나이대</th>
                <th>애완동물 정보</th>
            </tr>
        </thead>
        <tbody>
            <% 
            // 데이터베이스 연결 정보
            String url = "jdbc:oracle:thin:@localhost:1521:xe";
            String username = "c##kic1111";
            String password = "your_password"; // 오라클 계정 비밀번호

            // 데이터베이스 연결 및 쿼리 실행
            try {
                Class.forName("oracle.jdbc.driver.OracleDriver");
                Connection conn = DriverManager.getConnection(url, username, password);
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT * FROM members");

                while (rs.next()) {
                    // 회원 정보 출력
                    int memberId = rs.getInt("id");
                    String name = rs.getString("name");
                    String gender = rs.getString("gender");
                    String tel = rs.getString("tel");
                    String email = rs.getString("email");

                    out.println("<tr>");
                    out.println("<td>" + memberId + "</td>");
                    out.println("<td>" + name + "</td>");
                    out.println("<td>" + gender + "</td>");
                    out.println("<td>" + tel + "</td>");
                    out.println("<td>" + email + "</td>");

                    // 회원의 애완동물 정보 조회
                    String query = "SELECT * FROM health_information WHERE member_id = ?";
                    PreparedStatement pstmt = conn.prepareStatement(query);
                    pstmt.setInt(1, memberId);
                    ResultSet petRs = pstmt.executeQuery();
                    while (petRs.next()) {
                        String exerciseAmount = petRs.getString("exercise_amount");
                        String disease = petRs.getString("disease");
                        String heightRange = petRs.getString("height_range");
                        String weightRange = petRs.getString("weight_range");

                        // 회원의 애완동물 정보에 해당하는 강아지의 종과 나이대 조회
                        String dogQuery = "SELECT breed, age_group FROM dogs WHERE dog_id = ?";
                        PreparedStatement dogPstmt = conn.prepareStatement(dogQuery);
                        dogPstmt.setInt(1, petRs.getInt("dog_id"));
                        ResultSet dogRs = dogPstmt.executeQuery();

                        if (dogRs.next()) {
                            String breed = dogRs.getString("breed");
                            String ageGroup = dogRs.getString("age_group");

                            out.println("<td>" + breed + "</td>");
                            out.println("<td>" + ageGroup + "</td>");
                        }

                        dogRs.close();
                        dogPstmt.close();

                        out.println("<td>");
                        out.println("운동량: " + exerciseAmount + "<br>");
                        out.println("질환: " + disease + "<br>");
                        out.println("신장: " + heightRange + "<br>");
                        out.println("몸무게: " + weightRange);
                        out.println("</td>");
                    }

                    pstmt.close();
                    out.println("</tr>");
                }

                rs.close();
                stmt.close();
                conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
            %>
        </tbody>
    </table>
</body>
</html>

